/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.gti.asd.ariel.recordkeeping.gui.admin;

import edu.gti.asd.ariel.recordkeeping.model.Admin;
import edu.gti.asd.ariel.recordkeeping.model.City;
import edu.gti.asd.ariel.recordkeeping.model.IComboElement;
import edu.gti.asd.ariel.recordkeeping.model.Role;
import edu.gti.asd.ariel.recordkeeping.model.RoleTypes;
import edu.gti.asd.ariel.recordkeeping.model.Student;
import edu.gti.asd.ariel.recordkeeping.model.Teacher;
import edu.gti.asd.ariel.recordkeeping.model.User;
import edu.gti.asd.ariel.recordkeeping.service.AdminService;
import edu.gti.asd.ariel.recordkeeping.service.AdminServiceImpl;
import edu.gti.asd.ariel.recordkeeping.service.RoleService;
import edu.gti.asd.ariel.recordkeeping.service.RoleServiceImpl;
import edu.gti.asd.ariel.recordkeeping.service.UserService;
import edu.gti.asd.ariel.recordkeeping.service.UserServiceImpl;
import edu.gti.asd.ariel.recordkeeping.utils.FieldsUtils;
import java.awt.event.MouseEvent;
import java.util.List;
import java.util.Optional;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import org.springframework.context.support.ClassPathXmlApplicationContext;

/**
 *
 * @author ariel
 */
public class GTIAdminRegisterUserForm extends javax.swing.JFrame {
    private ClassPathXmlApplicationContext ctx;
    private RoleService roleService;
    private UserService userService;
    private AdminService adminService;
    
    private List<User> users;
    private List<Role> roles;
    
    //private List<Student> students;
    private List<Teacher> teachers;
    private List<Admin> admins;
    
    /**
     * Creates new form GTIAdminRegisterUserForm
     */
    public GTIAdminRegisterUserForm(ClassPathXmlApplicationContext ctx) {
        initComponents();
        this.ctx = ctx;
        initBeans();
        populateUsersData();
        updateJTable();
        updateRolesCombo();
        updateAdminCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUsers = new javax.swing.JTable();
        jButtonExit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldUsername = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxRole = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboBoxStudent = new javax.swing.JComboBox<>();
        jComboBoxTeacher = new javax.swing.JComboBox<>();
        jComboBoxAdmin = new javax.swing.JComboBox<>();
        jButtonUpdate = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonAdd = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldPassword = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);

        jTableUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Username", "Role", "StudentID", "TeacherID", "AdminID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableUsers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableUsersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableUsers);

        jButtonExit.setText("Exit");
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });

        jLabel1.setText("ID");

        jTextFieldId.setEditable(false);

        jLabel2.setText("Username");

        jTextFieldUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldUsernameActionPerformed(evt);
            }
        });

        jLabel3.setText("Role");

        jComboBoxRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxRoleActionPerformed(evt);
            }
        });

        jLabel4.setText("Student");

        jLabel5.setText("Teacher");

        jLabel6.setText("Admin");

        jComboBoxStudent.setEnabled(false);

        jButtonUpdate.setText("Update");
        jButtonUpdate.setEnabled(false);
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete");
        jButtonDelete.setEnabled(false);

        jButtonAdd.setText("Add");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel7.setText("Users");

        jLabel8.setText("Password");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxStudent, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBoxTeacher, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBoxAdmin, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldPassword, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextFieldUsername)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addGap(0, 0, Short.MAX_VALUE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(1, 1, 1)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jComboBoxRole, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jLabel5)
                                                            .addComponent(jLabel6)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jButtonUpdate)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(jButtonDelete)))
                                                        .addGap(20, 20, 20)
                                                        .addComponent(jButtonAdd))
                                                    .addComponent(jLabel4)))
                                            .addComponent(jLabel1)
                                            .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2))
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(419, 419, 419))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonExit)))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxStudent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonUpdate)
                            .addComponent(jButtonDelete)
                            .addComponent(jButtonAdd)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(52, 52, 52)
                .addComponent(jButtonExit)
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonExitActionPerformed

    private void jTextFieldUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldUsernameActionPerformed

    private void jComboBoxRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxRoleActionPerformed
        Role role = (Role)jComboBoxRole.getSelectedItem();
        
        if (RoleTypes.ROLE_ADMIN.name().equals(role.getRoleCode())) {
            jComboBoxAdmin.setEnabled(true);
            jComboBoxTeacher.setEnabled(false);
        } else if (RoleTypes.ROLE_TEACHER.name().equals(role.getRoleCode())) {
            jComboBoxAdmin.setEnabled(false);
            jComboBoxTeacher.setEnabled(true);
        }
    }//GEN-LAST:event_jComboBoxRoleActionPerformed

    private void jTableUsersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableUsersMouseClicked
        // Double click
        if (evt.getClickCount() == 2 && evt.getButton() == MouseEvent.BUTTON1) {
            DefaultTableModel tableModel = (DefaultTableModel)jTableUsers.getModel();
            int index = jTableUsers.getSelectedRow();
            User selectedUser = users.get(index);
            
            jTextFieldId.setText(tableModel.getValueAt(index, 0).toString());
            jTextFieldUsername.setText(tableModel.getValueAt(index, 1).toString());
            jTextFieldPassword.setText(selectedUser != null ? selectedUser.getPassword() : null);
            
            String roleCode = tableModel.getValueAt(index, 2).toString();
            Optional<Role> role = roles.stream().filter( r -> r.getRoleCode().equals(roleCode)).findFirst();
            jComboBoxRole.setSelectedItem(role.get());
            
            //jComboBoxStudent.setSelectedItem(tableModel.getValueAt(index, 3).toString());
            //jComboBoxTeacher.setSelectedItem(tableModel.getValueAt(index, 4).toString());
            
            Integer adminIdSelected = (Integer)tableModel.getValueAt(index, 5);
            Optional<Admin> admin = admins.stream().filter(a -> a.getAdminId().equals(adminIdSelected)).findFirst();
            jComboBoxAdmin.setSelectedItem(admin.orElse(new Admin(-1, "...", "Select one" )));
            setEditDeleteMode();
        }
    }//GEN-LAST:event_jTableUsersMouseClicked

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        Integer userId = Integer.parseInt(jTextFieldId.getText());
        String username = FieldsUtils.getMandatoryValueFromTextField(this, jTextFieldUsername, "username");
        String password = FieldsUtils.getMandatoryValueFromTextField(this, jTextFieldPassword, "password");
        Integer roleId = FieldsUtils.getMandatoryIdFromCombo(this, jComboBoxRole, "role");
        Student student = (Student)jComboBoxStudent.getSelectedItem();
        Teacher teacher = (Teacher)jComboBoxTeacher.getSelectedItem();
        Admin admin = (Admin)jComboBoxAdmin.getSelectedItem();
        
        User user = new User();
        user.setUserId(userId);
        user.setUsername(username);
        user.setPassword(password);
        user.setRoleId(roleId);
        user.setStudentId(student != null ? student.getStudentId() : null);
        user.setTeacherId(teacher != null ? teacher.getTeacherId() : null);
        user.setAdminId(admin != null ? admin.getAdminId() : null);
        
        userService.updateUser(user);
        setAddMode();
        clearFields();
        populateUsersData();
        updateJTable();
        
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        String username = FieldsUtils.getMandatoryValueFromTextField(this, jTextFieldUsername, "username");
        String password = FieldsUtils.getMandatoryValueFromTextField(this, jTextFieldPassword, "password");
        Integer roleId = FieldsUtils.getMandatoryIdFromCombo(this, jComboBoxRole, "role");
        Student student = (Student)jComboBoxStudent.getSelectedItem();
        Teacher teacher = (Teacher)jComboBoxTeacher.getSelectedItem();
        Admin admin = (Admin)jComboBoxAdmin.getSelectedItem();
        
        User user = new User();
        user.setUsername(username);
        user.setPassword(password);
        user.setRoleId(roleId);
        user.setStudentId(student != null ? student.getStudentId() : null);
        user.setTeacherId(teacher != null ? teacher.getTeacherId() : null);
        user.setAdminId(admin != null ? admin.getAdminId() : null);
        
        userService.registerUser(user);
        setAddMode();
        clearFields();
        populateUsersData();
        updateJTable();
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void initBeans() {
        roleService = ctx.getBean(RoleServiceImpl.class);
        userService = ctx.getBean(UserServiceImpl.class);
        adminService = ctx.getBean(AdminServiceImpl.class);
    }

    private void populateUsersData() {
        roles = roleService.getRoles();
        users = userService.getUsers();
        admins = adminService.getAllAdmins();
    }

    private void updateJTable() {
        DefaultTableModel model = (DefaultTableModel) jTableUsers.getModel();
        
        // Clean table
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        
        // Populate table
        for (User user : users) {
            Vector row = new Vector();
            row.add(user.getUserId());
            row.add(user.getUsername());
            row.add(user.getRole());
            row.add(user.getStudentId());
            row.add(user.getTeacherId());
            row.add(user.getAdminId());
            model.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JComboBox<IComboElement> jComboBoxAdmin;
    private javax.swing.JComboBox<IComboElement> jComboBoxRole;
    private javax.swing.JComboBox<String> jComboBoxStudent;
    private javax.swing.JComboBox<IComboElement> jComboBoxTeacher;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableUsers;
    private javax.swing.JTextField jTextFieldId;
    private javax.swing.JTextField jTextFieldPassword;
    private javax.swing.JTextField jTextFieldUsername;
    // End of variables declaration//GEN-END:variables

    private void updateRolesCombo() {
        DefaultComboBoxModel cbModel = (DefaultComboBoxModel) jComboBoxRole.getModel();
        cbModel.addElement(new Role(-1, "Select one..."));
        cbModel.addAll(roles);
    }

    private void updateAdminCombo() {
        DefaultComboBoxModel cbModel = (DefaultComboBoxModel) jComboBoxAdmin.getModel();
        cbModel.addElement(new Admin(-1, "...", "Select one" ));
        cbModel.addAll(admins);
    }

    public void setEditDeleteMode() {
        jButtonUpdate.setEnabled(true);
        jButtonDelete.setEnabled(true);
        jButtonAdd.setEnabled(false);
    }
    
    public void setAddMode() {
        jButtonUpdate.setEnabled(false);
        jButtonDelete.setEnabled(false);
        jButtonAdd.setEnabled(true);
    }

    private void clearFields() {
        jTextFieldId.setText("");
        jTextFieldUsername.setText("");
        jTextFieldPassword.setText("");
        jComboBoxRole.setSelectedIndex(0);
        
        if (jComboBoxStudent.getItemCount() > 0)
            jComboBoxStudent.setSelectedIndex(0);
        
        if (jComboBoxTeacher.getItemCount() > 0)
            jComboBoxTeacher.setSelectedIndex(0);
        
        if (jComboBoxAdmin.getItemCount() > 0)
            jComboBoxAdmin.setSelectedIndex(0);
    }
}
