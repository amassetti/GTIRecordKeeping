/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.gti.asd.ariel.recordkeeping.gui.admin;

import edu.gti.asd.ariel.recordkeeping.model.Subject;
import edu.gti.asd.ariel.recordkeeping.service.SubjectService;
import edu.gti.asd.ariel.recordkeeping.utils.ContextManager;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author ariel
 */
public class GTIManageSubjects extends javax.swing.JFrame {
    private ContextManager contextManager;
    private SubjectService subjectService;
    private Logger log = Logger.getLogger(GTIManageSubjects.class.getName());
    
    private List<Subject> subjects = new ArrayList();

    /**
     * Creates new form GTIManageDepartments
     */
    public GTIManageSubjects(ContextManager contextManager) {
        initComponents();
        this.contextManager = contextManager;
        initBeans();
        populateSubjectsData();
        updateJTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableSubjects = new javax.swing.JTable();
        jButtonExit = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButtonAdd = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldSubjectName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaDescription = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldID = new javax.swing.JTextField();
        jButtonUpdate = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldFilter = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldCode = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jComboBoxNFQLevel = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Subjects");

        jTableSubjects.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Code", "Name", "Description", "NFQ Level"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableSubjects.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jTableSubjectsComponentAdded(evt);
            }
        });
        jTableSubjects.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableSubjectsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableSubjects);

        jButtonExit.setText("Exit");
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Subjects");

        jButtonAdd.setText("Add");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jLabel1.setText("Name:");

        jTextFieldSubjectName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSubjectNameActionPerformed(evt);
            }
        });

        jLabel3.setText("Description:");

        jTextAreaDescription.setColumns(20);
        jTextAreaDescription.setRows(5);
        jScrollPane3.setViewportView(jTextAreaDescription);

        jLabel4.setText("ID");

        jTextFieldID.setEditable(false);

        jButtonUpdate.setText("Update");
        jButtonUpdate.setEnabled(false);
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete");
        jButtonDelete.setEnabled(false);
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jLabel5.setText("Filter:");

        jTextFieldFilter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldFilterKeyTyped(evt);
            }
        });

        jLabel6.setText("Code:");

        jLabel7.setText("NFQ Level:");

        jComboBoxNFQLevel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "5", "6", "7", "8" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(859, Short.MAX_VALUE)
                .addComponent(jButtonExit)
                .addGap(25, 25, 25))
            .addGroup(layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 638, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(173, 173, 173))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jButtonUpdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonDelete)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonAdd))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldCode, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldSubjectName, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxNFQLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel2)
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldSubjectName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxNFQLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonAdd)
                            .addComponent(jButtonUpdate)
                            .addComponent(jButtonDelete)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(68, 68, 68)
                .addComponent(jButtonExit)
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonExitActionPerformed

    private void cleanInputs() {
        jTextFieldID.setText("");
        jTextFieldCode.setText("");
        jTextFieldSubjectName.setText("");
        jTextAreaDescription.setText("");
        jTextFieldSubjectName.requestFocus();
    }
    
    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        String code = jTextFieldCode.getText();
        String name = jTextFieldSubjectName.getText();
        String description = jTextAreaDescription.getText();
        Integer nfqLevel = Integer.valueOf(jComboBoxNFQLevel.getSelectedItem().toString());
        
        if (code == null || code.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Code is required");
            jTextFieldCode.requestFocus();
            return;
        }
        
        if (name == null || name.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Subject name is required");
            jTextFieldSubjectName.requestFocus();
            return;
        }
        
        if (description == null || description.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Department description is required");
            jTextAreaDescription.requestFocus();
            return;
        }
        
        Subject subject = new Subject();
        subject.setSubjectCode(code);
        subject.setSubjectName(name);
        subject.setSubjectDescription(description);
        subject.setNfqLevel(nfqLevel);

        subjectService.insertSubject(subject);
        
        populateSubjectsData();
        updateJTable();
        cleanInputs();
        
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jTableSubjectsComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jTableSubjectsComponentAdded
        JOptionPane.showMessageDialog(this, "ComponentAdded");
    }//GEN-LAST:event_jTableSubjectsComponentAdded

    public void setEditDeleteMode() {
        jButtonUpdate.setEnabled(true);
        jButtonDelete.setEnabled(true);
        jButtonAdd.setEnabled(false);
    }
    
    public void setAddMode() {
        jButtonUpdate.setEnabled(false);
        jButtonDelete.setEnabled(false);
        jButtonAdd.setEnabled(true);
    }
    
    private void jTableSubjectsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableSubjectsMouseClicked
        
        // Double click
        if (evt.getClickCount() == 2 && evt.getButton() == MouseEvent.BUTTON1) {
            DefaultTableModel tableModel = (DefaultTableModel)jTableSubjects.getModel();
            int index = jTableSubjects.getSelectedRow();
            Subject selectedSubject = subjects.get(index);
            
            jTextFieldID.setText(selectedSubject.getSubjectId().toString());
            jTextFieldCode.setText(selectedSubject.getSubjectCode());
            jTextFieldSubjectName.setText(selectedSubject.getSubjectName());
            jTextAreaDescription.setText(selectedSubject.getSubjectDescription());
            jComboBoxNFQLevel.setSelectedItem(selectedSubject.getNfqLevel().toString());
            setEditDeleteMode();
        }
        
    }//GEN-LAST:event_jTableSubjectsMouseClicked

    private void jTextFieldSubjectNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSubjectNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSubjectNameActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        Integer id = Integer.parseInt(jTextFieldID.getText());
        String code = jTextFieldCode.getText();
        String name = jTextFieldSubjectName.getText();
        String description = jTextAreaDescription.getText();
        Integer nfqLevel = Integer.valueOf(jComboBoxNFQLevel.getSelectedItem().toString());
        
        Subject subjectToUpdate = new Subject();
        subjectToUpdate.setSubjectId(id);
        subjectToUpdate.setSubjectCode(code);
        subjectToUpdate.setSubjectName(name);
        subjectToUpdate.setSubjectDescription(description);
        subjectToUpdate.setNfqLevel(nfqLevel);
        
        subjectService.updateSubject(subjectToUpdate);
        
        populateSubjectsData();
        updateJTable();
        cleanInputs();
        setAddMode();
        
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        Integer id = Integer.parseInt(jTextFieldID.getText());
        String name = jTextFieldSubjectName.getText();
        
        int option = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete subject " + name, "Delete Subject", 0);
       
        if (option == JOptionPane.YES_OPTION) {
            subjectService.deleteSubject(id);
            populateSubjectsData();
            updateJTable();
            cleanInputs();
            setAddMode();
        }

    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jTextFieldFilterKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldFilterKeyTyped
        String filter = jTextFieldFilter.getText().trim();
        
        if (filter.length() > 2) {
            subjects = subjectService.searchSubjects(filter);
            updateJTable();
        } else if (filter.length() == 0) {
            subjects = subjectService.getAllSubjects();
            updateJTable();
        }
        
    }//GEN-LAST:event_jTextFieldFilterKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JComboBox<String> jComboBoxNFQLevel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableSubjects;
    private javax.swing.JTextArea jTextAreaDescription;
    private javax.swing.JTextField jTextFieldCode;
    private javax.swing.JTextField jTextFieldFilter;
    private javax.swing.JTextField jTextFieldID;
    private javax.swing.JTextField jTextFieldSubjectName;
    // End of variables declaration//GEN-END:variables

    private void initBeans() {
        this.subjectService = contextManager.getBean(SubjectService.class);
    }

    private void updateJTable() {
        DefaultTableModel tableModel = (DefaultTableModel) jTableSubjects.getModel();
        
        // Clean table
        tableModel.getDataVector().removeAllElements();
        tableModel.fireTableDataChanged();
        
        // Populate table
        for (Subject subject : subjects) {
            Vector row = new Vector();
            row.add(subject.getSubjectId());
            row.add(subject.getSubjectCode());
            row.add(subject.getSubjectName());
            row.add(subject.getSubjectDescription());
            row.add(subject.getNfqLevel());
            tableModel.addRow(row);
        }
        
    }
    
    private void populateSubjectsData() {
        subjects = subjectService.getAllSubjects();
       
    }
}
