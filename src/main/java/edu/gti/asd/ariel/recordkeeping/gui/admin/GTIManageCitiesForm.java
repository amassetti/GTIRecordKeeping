/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.gti.asd.ariel.recordkeeping.gui.admin;

import edu.gti.asd.ariel.recordkeeping.model.City;
import edu.gti.asd.ariel.recordkeeping.service.CityService;
import edu.gti.asd.ariel.recordkeeping.utils.ContextManager;
import edu.gti.asd.ariel.recordkeeping.utils.FieldsUtils;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author ariel
 */
public class GTIManageCitiesForm extends javax.swing.JFrame {
    private ContextManager contextManager;
    private CityService cityService;
    private Logger log = Logger.getLogger(GTIManageCitiesForm.class.getName());
    
    private List<City> cities = new ArrayList();

    /**
     * Creates new form GTIManageDepartments
     */
    public GTIManageCitiesForm(ContextManager contextManager) {
        initComponents();
        this.contextManager = contextManager;
        initBeans();
        populateCitiesData();
        updateJTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDepartments = new javax.swing.JTable();
        jButtonExit = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButtonAdd = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldCityName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldID = new javax.swing.JTextField();
        jButtonUpdate = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldFilter = new javax.swing.JTextField();
        jComboBoxCounties = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cities");

        jTableDepartments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "County"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableDepartments.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jTableDepartmentsComponentAdded(evt);
            }
        });
        jTableDepartments.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableDepartmentsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableDepartments);

        jButtonExit.setText("Exit");
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Cities");

        jButtonAdd.setText("Add");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jLabel1.setText("Name:");

        jTextFieldCityName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCityNameActionPerformed(evt);
            }
        });

        jLabel3.setText("County:");

        jLabel4.setText("ID");

        jTextFieldID.setEditable(false);

        jButtonUpdate.setText("Update");
        jButtonUpdate.setEnabled(false);
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete");
        jButtonDelete.setEnabled(false);
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jLabel5.setText("Filter:");

        jTextFieldFilter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldFilterKeyTyped(evt);
            }
        });

        jComboBoxCounties.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select one...", "Antrim", "Armagh", "Carlow", "Cavan", "Clare", "Cork", "Derry (Londonderry)", "Donegal", "Down", "Dublin", "Fermanagh", "Galway", "Kerry", "Kildare", "Kilkenny", "Laois", "Leitrim", "Limerick", "Longford", "Louth", "Mayo", "Meath", "Monaghan", "Offaly", "Roscommon", "Sligo", "Tipperary", "Tyrone", "Waterford", "Westmeath", "Wexford", "Wicklow" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonExit)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addGap(213, 213, 213))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jButtonUpdate)
                                            .addGap(14, 14, 14)
                                            .addComponent(jButtonDelete)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jButtonAdd)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jTextFieldCityName, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBoxCounties, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(25, 25, 25))
            .addGroup(layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 638, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldCityName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxCounties, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(133, 133, 133)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonAdd)
                            .addComponent(jButtonUpdate)
                            .addComponent(jButtonDelete))))
                .addGap(68, 68, 68)
                .addComponent(jButtonExit)
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonExitActionPerformed

    private void cleanInputs() {
        jTextFieldID.setText("");
        jTextFieldCityName.setText("");
        jComboBoxCounties.setSelectedIndex(0);
        jTextFieldCityName.requestFocus();
    }
    
    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        
        String name = FieldsUtils.getMandatoryValueFromTextField(this, jTextFieldCityName, "city name");
        if (name.length() == 0) return;
        
        String county = jComboBoxCounties.getSelectedItem().toString();
        if (county.startsWith("Select ")) {
            JOptionPane.showMessageDialog(this, "Select a county");
            jComboBoxCounties.requestFocus();
            return;
        }
        
        City city = new City();
        city.setCityName(name);
        city.setCounty(county);

        cityService.insertCity(city);
        
        populateCitiesData();
        updateJTable();
        cleanInputs();
        
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jTableDepartmentsComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jTableDepartmentsComponentAdded
        JOptionPane.showMessageDialog(this, "ComponentAdded");
    }//GEN-LAST:event_jTableDepartmentsComponentAdded

    public void setEditDeleteMode() {
        jButtonUpdate.setEnabled(true);
        jButtonDelete.setEnabled(true);
        jButtonAdd.setEnabled(false);
    }
    
    public void setAddMode() {
        jButtonUpdate.setEnabled(false);
        jButtonDelete.setEnabled(false);
        jButtonAdd.setEnabled(true);
    }
    
    private void jTableDepartmentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableDepartmentsMouseClicked
        // Double click
        if (evt.getClickCount() == 2 && evt.getButton() == MouseEvent.BUTTON1) {
            DefaultTableModel tableModel = (DefaultTableModel)jTableDepartments.getModel();
            int index = jTableDepartments.getSelectedRow();
            jTextFieldID.setText(tableModel.getValueAt(index, 0).toString());
            jTextFieldCityName.setText(tableModel.getValueAt(index, 1).toString());
            jComboBoxCounties.setSelectedItem(tableModel.getValueAt(index, 2).toString());
            setEditDeleteMode();
        }
        
    }//GEN-LAST:event_jTableDepartmentsMouseClicked

    private void jTextFieldCityNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCityNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCityNameActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        Integer id = Integer.parseInt(jTextFieldID.getText());
        
        String name = FieldsUtils.getMandatoryValueFromTextField(this, jTextFieldCityName, "city name");
        if (name.length() == 0) return;
        
        String county = jComboBoxCounties.getSelectedItem().toString();
        if (county.startsWith("Select ")) {
            JOptionPane.showMessageDialog(this, "Select a county");
            jComboBoxCounties.requestFocus();
            return;
        }
        
        City city = new City();
        city.setCityId(id);
        city.setCityName(name);
        city.setCounty(county);
        
        cityService.updateCity(city);
        
        populateCitiesData();
        updateJTable();
        cleanInputs();
        setAddMode();
        
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        Integer id = Integer.parseInt(jTextFieldID.getText());
        String name = jTextFieldCityName.getText();
        
        int option = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete city " + name, "Delete City", 0);
       
        if (option == JOptionPane.YES_OPTION) {
            cityService.deleteCity(id);
            populateCitiesData();
            updateJTable();
            cleanInputs();
            setAddMode();
        }
        

    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jTextFieldFilterKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldFilterKeyTyped
        String filter = jTextFieldFilter.getText().trim();
        
        if (filter.length() > 2) {
            cities = cityService.searchByName(filter);
            updateJTable();
        } else if (filter.length() == 0) {
            cities = cityService.getCities();
            updateJTable();
        }
        
    }//GEN-LAST:event_jTextFieldFilterKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JComboBox<String> jComboBoxCounties;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableDepartments;
    private javax.swing.JTextField jTextFieldCityName;
    private javax.swing.JTextField jTextFieldFilter;
    private javax.swing.JTextField jTextFieldID;
    // End of variables declaration//GEN-END:variables

    private void initBeans() {
        this.cityService = contextManager.getBean(CityService.class);
    }

    private void updateJTable() {
        DefaultTableModel tableModel = (DefaultTableModel) jTableDepartments.getModel();
        
        // Clean table
        tableModel.getDataVector().removeAllElements();
        tableModel.fireTableDataChanged();
        
        // Populate table
        for (City city : cities) {
            Vector row = new Vector();
            row.add(city.getCityId());
            row.add(city.getCityName());
            row.add(city.getCounty());
            tableModel.addRow(row);
        }
        
    }
    
    private void populateCitiesData() {
        cities = cityService.getCities();        
    }
}
